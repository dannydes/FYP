package org.uom.fyp.engine

import com.perfdynamics.pdq.PDQ

/**
 * Contains utility methods that extract values generated by PDQ and transfers
 * them to properties in the actual data structures within the road graph
 * network.
 */
object PDQProperties {

  /**
   * Copies values from properties within the PDQ object to the given road network.
   * @param pdq PDQ object.
   * @param network Road network.
   */
  def pdqNodesToRoadNetwork(pdq: PDQ, network: RoadNetwork) = {
    //val edges = network.streetList.map((street: Street) => street.edges).flatten

    val edges = network.edgeSet().toArray
    pdqNodesToRoadNetworkWorker(pdq, network, edges(0).asInstanceOf[Edge])
  }

  private def pdqNodesToRoadNetworkWorker(pdq: PDQ, network: RoadNetwork, edge: Edge): Unit = {
    val outgoing: java.util.Set[Edge] = network.outgoingEdgesOf(edge.getTarget)
    if (outgoing.size > 0) {
      val outgoingIterator = outgoing.iterator
      while (outgoingIterator.hasNext) {
        pdqNodesToRoadNetworkWorker(pdq, network, outgoingIterator.next)
      }
    }
  }

}
